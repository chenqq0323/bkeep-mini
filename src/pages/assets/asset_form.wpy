<template>
  <view class="container">
    <view class="grid">
      <view class="item">
        <view class="item-name">账户名</view>
        <input value="{{ wallet.name }}" bindinput="bindKeyName" maxlength="15" placeholder="请输入账户名" />
      </view>

      <view class="item">
        <view class="item-name">账户总额</view>
        <input type="number" placeholder="0.00" value="{{ wallet.amount }}" bindinput="bindKeyAmount" maxlength="10" placeholder="请输入账户余额" />
      </view>

      <view class="item">
        <view class="item-name">是否顶级分类</view>
        <switch checked="{{ isParentLevel }}" bindchange="changeSwitch" />
      </view>

      <view class="item picker" hidden="{{ isParentLevel }}">
        <text class="picker-type item-name">所属类型</text>
        <picker range="{{ parents }}" range-key="name" bindchange="changeType">
          <view class="name">{{parents[parentIndex]['name']}}</view>
        </picker>
      </view>

      <view class="item picker">
        <text class="picker-type item-name">资产类型</text>
        <picker range="{{ assetTypes }}" range-key="name" bindchange="changeAssetType">
          <view class="name">{{assetTypes[typeIndex]['name']}}</view>
        </picker>
      </view>

      <navigator url="/pages/forms/icons_chose?url=assets" class="item">
        <view class="item-name">图标</view>
        <image class="icon-image" src="{{ resource }}{{ wallet.icon }}"></image>
      </navigator>

      <view>
        <textarea placeholder-class="place-class" bindinput="bindKeyRemark" value="{{ wallet.remark }}" placeholder="备注" />
      </view>
    </view>

    <view class="save-btn" wx:if="{{ wallet.id != 0 }}">
      <view class="bill-btn" @tap="del">删除</view>
      <view class="bill-btn save" @tap="submit">保存</view>
    </view>
    
    <view class="zan-btns" wx:else>
      <button class="zan-btn jz-btn btn-shadow" style="background: #2196F3; color: white;" @tap="submit">保存</button>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import wxRequest from '@/utils/wxRequest'
  import Host from '@/utils/host'
  import tip from '@/utils/tip'
  import Session from '@/utils/session'
  export default class AssetList extends wepy.page {
    config = {
      navigationBarTitleText: '资产设置'
    }
    data = {
      wallet: {
        id: 0,
        name: '',
        amount: 0,
        parentId: 0,
        icon: '',
        remark: '',
        type: ''
      },
      mehotd: '',
      parents: [],
      parentIndex: 0,
      assetTypes: [
        { name: '存款账户', key: 'deposit' },
        { name: '负债账户', key: 'debt' }
      ],
      typeIndex: 0,
      isParentLevel: false
    }

    methods = {
      bindKeyName (e) {
        this.wallet.name = e.detail.value
      },
      bindKeyAmount (e) {
        this.wallet.amount = e.detail.value
      },
      bindKeyRemark (e) {
        this.wallet.remark = e.detail.value
      },
      choseIcon (file_path) {
        this.wallet.icon = file_path
      },
      changeType(e) {
        let value = e.detail.value
        this.parentIndex = value
        this.wallet.parentId = this.parents[value]['id']
      },
      changeSwitch (e) {
        this.isParentLevel = e.detail.value
        if (this.isParentLevel) {
          this.wallet.parentId = 0
        } else {
          if (this.parents.length > 0)
            this.wallet.parentId = this.parents[this.parentIndex]['id']
        }
      },
      changeAssetType (e) {
        let value = e.detail.value
        this.typeIndex = value
        this.wallet.type = this.assetTypes[value]['key']
      },
      async del () {
        await tip.confirm('删除后，所属该分类的账单也将一并删除！', {}, '警告')
        const data = await wxRequest.Destroy(`assets/delete/${this.wallet.id}`)
        if (data.code == 10000) {
          Session.clearByKey('asset')
          wepy.navigateBack({
            delta: 1
          })
        } else {
          tip.error(data.msg)
        }
      },
      async submit () {
        let method = 'POST'
        let cId = null
        if (this.wallet.id != 0) {
          method = 'PUT'
          cId = this.wallet.id
        }

        if (this.wallet.name == '') {
          tip.error('请填写账户名称')
          return false
        }

        if (this.wallet.amount == '') {
          this.wallet.amount = 0
        }

        let res = null
        if(method == 'POST' ) {
          res = await wxRequest.Post('assets/add', this.wallet)
        } else {
          res = await wxRequest.Put(`assets/update/${cId}`, this.wallet)
        }
        if (res.code == 10000) {
          Session.clearByKey('asset')
          wepy.navigateBack({
            delta: 1
          })
        } else {
          tip.error(res.msg)
        }
      }
    }

    computed = {
      host () {
        return Host.host;
      },
      resource () {
        return Host.resource
      }
    }

    onLoad (options) {
      this.wallet.type = this.assetTypes[this.typeIndex]['key']

      this.getParent()
      if (options.id != undefined) {
        this.getWallet(options.id)
      }
    }

    async getWallet (id) {
      const data = await wxRequest.Get(`assets/by-id/${id}`)
      this.wallet = data.data
      if (this.wallet.type == 'debt') this.typeIndex = 1
      if (this.wallet.parentId != 0) {
        this.updateCurrentIndex()
      } else {
        this.isParentLevel = true
      }
      this.$apply()
    }

    async getParent() {
      const data = await wxRequest.Get('assets/parent')
      this.parents = data.data
      if (this.parents.length > 0 && !this.isParentLevel && this.wallet.id == 0) {
        this.wallet.parentId = this.parents[0]['id']
      }
      this.$apply()
    }

    updateCurrentIndex () {
      for (let index in this.parents) {
        if (this.parents[index]['id'] == this.wallet.parentId) {
          this.parentIndex = index
          return false
        }
      }
    }

    setIcon (e) {
      this.wallet.icon = e.icon
      this.$apply()
    }
  }
</script>
<style lang="scss" src="@/public/styles/forms/category_form.scss"></style>
