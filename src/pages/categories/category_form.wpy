<template>
  <view class="container">
    <form bindsubmit="formSubmit" report-submit="true">
      <view class="container">
        <view class="column">
          <text>分类名称</text>
          <input class="remark" type="text" name="name" value="{{ category.name }}" placeholder="请输入分类名称"/>
        </view>
        

        <view class="column">
          <text>是否顶级分类</text>
          <switch checked="{{ isParentLevel }}" bindchange="changeSwitch" />
        </view>

        <view class="column" wx:if="{{ !isParentLevel }}">
          <text>所属分类</text>
          <picker range="{{ parentCategories }}" value="{{ curIndex }}" range-key="name" bindchange="changeCategory">
            <input hidden name="parentId" value="{{ category.parentId }}"/>
            <text>{{ parentName }}</text>
          </picker>
        </view>

        <view class="column" @tap="redirect_url">
          <text>图标</text>
          <view>
            <image class="icon-image" src="{{ resourceHost }}{{ category.iconAddr }}"></image>
            <input class="icon" hidden name="iconAddr" value="{{ category.iconAddr }}"/>
          </view>
        </view>

        <view class="btn-save">
          <button wx:if="{{ !submiting }}" formType="submit">保存</button>
          <button wx:else>保存中...</button>
          <input hidden='true' name="category" value="{{ category.category }}"/>
        </view>
      </view>
    </form>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import wxRequest from '@/utils/wxRequest'
  import Host from '@/utils/host'
  import tip from '@/utils/tip'
  import Session from '@/utils/session'
  export default class CategoryForm extends wepy.page {
    data = {
      category: {
        id: 0,
        name: '',
        iconAddr: '',
        category: '',
        parentId: 0
      },
      parentCategories: [],
      curIndex: 0,
      isParentLevel: false,
      submiting: false,
      isEditMold: false
    }

    onLoad (options) {
      this.category.category = options.type
      this.getParentCategories()
      if (typeof options.id !== 'undefined') {
        this.isEditMold = true
        this.category.id = options.id
        this.getCategory()
      }
      if (typeof options.parent_id !== 'undefined') {
        if (options.parent_id === 0) {
          this.isParentLevel = true
        } else {
          this.isParentLevel = false
          this.category.parentId = options.parent_id
        }
      }
      
    }

    computed = {
      host () {
        return Host.host;
      },
      resourceHost () {
        return Host.resource;
      },
      parentName () {
        if (typeof this.category.parent_name !== 'undefined') {
          return this.category.parent_name
        } else {
          if (this.parentCategories.length === 0) return ;
          return this.parentCategories[this.curIndex]['name']
        }
      }
    }

    methods = {
      changeSwitch (e) {
        this.isParentLevel = e.detail.value
        if (this.isParentLevel) {
          this.category.parentId = 0
        } else {
          if (this.parentCategories.length > 0) {
            this.category.parentId = this.parentCategories[this.curIndex]['id']
          }
        }
      },
      changeCategory(e) {
        const idx = e.detail.value
        this.curIndex = idx
        this.category.parentId = this.parentCategories[idx]['id']
      },
      bindKeyName (e) {
        this.category.name = e.detail.value
      },
      redirect_url () {
        wx.navigateTo({ url: `/pages/forms/icons_chose?url=categories` })
      }
    }

    async formSubmit ({ detail }) {
      if (detail.value.name == '') {
        tip.error('请填写分类名称')
        return false
      }

      if (this.isEditMold) {
        this.updateCategory(detail.value)
      } else {
        this.createCategory(detail.value)
      }
    }

    async createCategory (category) {
      const res = await wxRequest.Post(`account-sort/add`, category)
      if (res.code == 10000) {
        Session.clearByKey('category')
        wepy.navigateBack({
          delta: 1
        })
      } else {
        tip.error(res.msg)
      }
    }
    
    async updateCategory(category) {
      const res = await wxRequest.Put(`account-sort/update/${this.category.id}`, category)
      if (res.code == 10000) {
        Session.clearByKey('category')
        wepy.navigateBack({
          delta: 1
        })
      } else {
        tip.error(res.msg)
      }
    }

    async getCategory() {
      const data = await wxRequest.Get(`account-sort/by-id/${this.category.id}`)
      this.category = data.data
      if (this.category.parentId && this.category.parentId != 0) {
        this.updateCurrentIndex()
      } else {
        this.isParentLevel = true
      }
      this.$apply()
    }

    async getParentCategories() {
      const data = await wxRequest.Get('/account-sort/get-account-sort-parent',{category: this.category.category})
      this.parentCategories = data.data

      if (this.parentCategories.length > 0 && !this.isParentLevel && this.category.id === 0) {
        this.category.parentId = this.parentCategories[0]['id']
      }
      this.$apply()
    }

    setIcon (e) {
      this.category.iconAddr = e.icon
      this.$apply()
    }

    updateCurrentIndex () {
      for (let index in this.parentCategories) {
        if (this.parentCategories[index]['id'] == this.category.parentId) {
          this.curIndex = index
          return false
        }
      }
    }
  }
</script>
<style lang="scss" src="@/public/styles/statement/statement.scss"></style>
